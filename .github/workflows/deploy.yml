name: Vercel Production Deployment

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  push:
    branches:
      - main

jobs:
  Deploy-Production:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "pnpm" # 🔥 pnpm 캐싱 추가

      - name: Install pnpm manually
        run: |
          corepack enable
          corepack prepare pnpm@latest --activate
          curl -fsSL https://get.pnpm.io/install.sh | sh -
          export PATH="$HOME/.local/share/pnpm:$PATH"
          echo "$HOME/.local/share/pnpm" >> $GITHUB_PATH
          pnpm --version

      - name: Install Vercel CLI using pnpm
        run: pnpm add -g vercel@latest # 🔥 npm 대신 pnpm 사용

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Install dependencies
        run: pnpm install --frozen-lockfile # 🔥 pnpm으로 의존성 설치

      - name: Build Project Artifacts
        run: pnpm vercel build --prod --token=${{ secrets.VERCEL_TOKEN }} # 🔥 pnpm 사용

      - name: Deploy Project Artifacts to Vercel
        run: pnpm vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }} # 🔥 pnpm 사용
